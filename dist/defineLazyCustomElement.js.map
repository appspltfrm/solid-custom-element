{"version":3,"file":"defineLazyCustomElement.js","sources":["../src/lib/defineLazyCustomElement.ts"],"sourcesContent":["import {CustomElement} from \"./customElement\";\nimport {customElementBirthmark} from \"./customElementBirthmark\";\nimport {CustomElementComponent} from \"./defineComponent\";\nimport {buildFinalClass} from \"./internals/buildFinalClass\";\nimport {InternalClass} from \"./internals/InternalClass\";\n\ntype LazyType = Promise<CustomElementConstructor | {default: CustomElementConstructor} | CustomElementComponent<any, CustomElement> | {default: CustomElementComponent<any, CustomElement>}>;\n\nconst elements: {[tagName: string]: () => LazyType} = {};\nconst loading: {[tagName: string]: Promise<void>} = {};\n\nconst observer = new MutationObserver(async (mutations) => {\n\n    // elements that were defined within this call\n    let definedElements: string[] = [];\n\n    for (const m of mutations) {\n        if (m.addedNodes) {\n            for (const n of m.addedNodes) {\n\n                if (n instanceof Element && elements[n.tagName]) {\n                    const tagName = n.tagName;\n\n                    if (!definedElements.includes(tagName) && !customElements.get(tagName)) {\n\n                        if (!(tagName in loading)) {\n                            loading[tagName] = new Promise(async (resolve) => {\n                                try {\n                                    let elementClass = await elements[n.tagName]();\n                                    if (typeof elementClass === \"object\") {\n                                        elementClass = elementClass.default;\n                                    }\n\n                                    if (typeof elementClass === \"function\" && (elementClass as unknown as CustomElementComponent<any, CustomElement>).defineCustomElement) {\n                                        (elementClass as unknown as CustomElementComponent<any, CustomElement>).defineCustomElement();\n\n                                    } else {\n\n                                        if ((elementClass as unknown as InternalClass)[customElementBirthmark]) {\n                                            elementClass = buildFinalClass(elementClass as any);\n                                        }\n\n                                        customElements.define(n.tagName.toLowerCase(), elementClass as any);\n                                    }\n\n                                    resolve();\n                                } catch (e) {\n                                    console.error(e);\n                                    delete loading[tagName];\n                                }\n                            })\n                        }\n\n                        await loading[tagName];\n\n                        definedElements.push(n.tagName);\n                    }\n\n                    if (definedElements.includes(n.tagName)) {\n                        customElements.upgrade(n);\n                    }\n                }\n            }\n        }\n    }\n\n    for (const e of definedElements) {\n        delete elements[e];\n        delete loading[e];\n    }\n\n    if (Object.keys(elements).length === 0) {\n        observer.disconnect();\n    }\n})\n\nlet connected = false;\n\nexport function defineLazyCustomElement(tagName: string, loader: () => LazyType): void {\n\n    tagName = tagName.toUpperCase();\n\n    if (customElements.get(tagName) || elements[tagName]) {\n        throw new Error(`Custom element ${tagName} already defined`);\n    }\n\n    elements[tagName] = loader;\n\n    if (!connected) {\n        connected = true;\n        observer.observe(document, {subtree: true, childList: true});\n    }\n}\n"],"names":["elements","loading","observer","mutations","definedElements","m","tagName","resolve","elementClass","customElementBirthmark","buildFinalClass","e","connected","defineLazyCustomElement","loader"],"mappings":";;AAQA,MAAMA,IAAgD,CAAA,GAChDC,IAA8C,CAAA,GAE9CC,IAAW,IAAI,iBAAiB,OAAOC,MAAc;AAGvD,MAAIC,IAA4B,CAAA;AAEhC,aAAWC,KAAKF;AACZ,QAAIE,EAAE;AACS,iBAAA,KAAKA,EAAE;AAEd,YAAI,aAAa,WAAWL,EAAS,EAAE,OAAO,GAAG;AAC7C,gBAAMM,IAAU,EAAE;AAEd,UAAA,CAACF,EAAgB,SAASE,CAAO,KAAK,CAAC,eAAe,IAAIA,CAAO,MAE3DA,KAAWL,MACbA,EAAQK,CAAO,IAAI,IAAI,QAAQ,OAAOC,MAAY;AAC1C,gBAAA;AACA,kBAAIC,IAAe,MAAMR,EAAS,EAAE,OAAO,EAAE;AACzC,cAAA,OAAOQ,KAAiB,aACxBA,IAAeA,EAAa,UAG5B,OAAOA,KAAiB,cAAeA,EAAuE,sBAC7GA,EAAuE,oBAAoB,KAIvFA,EAA0CC,CAAsB,MACjED,IAAeE,EAAgBF,CAAmB,IAGtD,eAAe,OAAO,EAAE,QAAQ,YAAA,GAAeA,CAAmB,IAG9DD;qBACH;AACL,sBAAQ,MAAM,CAAC,GACf,OAAON,EAAQK,CAAO;AAAA,YAC1B;AAAA,UAAA,CACH,IAGL,MAAML,EAAQK,CAAO,GAELF,EAAA,KAAK,EAAE,OAAO,IAG9BA,EAAgB,SAAS,EAAE,OAAO,KAClC,eAAe,QAAQ,CAAC;AAAA,QAEhC;AAAA;AAKZ,aAAWO,KAAKP;AACZ,WAAOJ,EAASW,CAAC,GACjB,OAAOV,EAAQU,CAAC;AAGpB,EAAI,OAAO,KAAKX,CAAQ,EAAE,WAAW,KACjCE,EAAS,WAAW;AAE5B,CAAC;AAED,IAAIU,IAAY;AAEA,SAAAC,EAAwBP,GAAiBQ,GAA8B;AAInF,MAFAR,IAAUA,EAAQ,eAEd,eAAe,IAAIA,CAAO,KAAKN,EAASM,CAAO;AACzC,UAAA,IAAI,MAAM,kBAAkBA,mBAAyB;AAG/D,EAAAN,EAASM,CAAO,IAAIQ,GAEfF,MACWA,IAAA,IACZV,EAAS,QAAQ,UAAU,EAAC,SAAS,IAAM,WAAW,IAAK;AAEnE;"}