{"version":3,"file":"CustomElement.js","sources":["../src/lib/CustomElement.ts"],"sourcesContent":["import {AssignableType} from \"@co.mmons/js-utils/core\";\nimport {\n    CustomElementDisconnectedCallback,\n    CustomElementInterface,\n    CustomElementPropertyValueChangeCallback\n} from \"./CustomElementInterface\";\nimport {CustomElementOptions} from \"./CustomElementOptions\";\nimport {globalStylesProp} from \"./internals/globalStylesProp\";\nimport {ReactivePropsMap} from \"./internals/ReactivePropsMap\";\nimport {customElementBirthmark} from \"./customElementBirthmark\";\nimport {CallbackName} from \"./internals/CallbackName\";\nimport {callbacksProp} from \"./internals/callbacksProp\";\nimport {InternalInstance} from \"./internals/InternalInstance\";\nimport {fromAttributeValue} from \"./internals/fromAttributeValue\";\nimport {preValuesProp} from \"./internals/preValuesProp\";\nimport {reactivePropsProp} from \"./internals/reactivePropsProp\";\nimport {renderRootProp} from \"./internals/renderRootProp\";\nimport {stylesProp} from \"./internals/stylesProp\";\n\nexport function CustomElement<Type extends HTMLElement = HTMLElement>(baseTypeOrOptions?: AssignableType<Type> | CustomElementOptions, options?: CustomElementOptions) {\n\n    // @ts-ignore\n    const BaseType: AssignableType<Type> = typeof baseTypeOrOptions === \"function\" ? baseTypeOrOptions : HTMLElement;\n\n    if (typeof baseTypeOrOptions === \"object\") {\n        options = baseTypeOrOptions;\n    }\n\n    if (!options) {\n        options = {};\n    }\n\n    if (!options.renderRoot) {\n        options.renderRoot = \"shadow\";\n    }\n\n    if (options.reactive) {\n        for (const propName of Object.keys(options.reactive)) {\n            if (typeof options.reactive[propName] === \"boolean\") {\n                options.reactive[propName] = {};\n            }\n        }\n    }\n\n    // @ts-ignore\n    const newClass = class CustomElementBase extends BaseType! implements CustomElementInterface {\n        static readonly [customElementBirthmark] = true;\n\n        constructor() {\n            super();\n\n            const ownPropNames = Object.getOwnPropertyNames(this).filter(p => p !== \"_$owner\");\n            const preValues: {[propName: string]: any} = {};\n            let hasPreValue = false;\n\n            for (const propName of ownPropNames) {\n                const descriptor = Object.getOwnPropertyDescriptor(this, propName);\n                if (descriptor?.writable) {\n                    preValues[propName] = descriptor.value;\n                    hasPreValue = true;\n                }\n            }\n\n            // we must also check for attributes, for initial values\n            const reactiveProps = Object.getPrototypeOf(this).constructor[reactivePropsProp] as ReactivePropsMap;\n            for (const [propName, propDefinition] of Object.entries(reactiveProps)) {\n                if (!ownPropNames.includes(propName) && this.hasAttribute(propDefinition.attribute!)) {\n                    preValues[propName] = fromAttributeValue(this.getAttribute(propDefinition.attribute!), propDefinition);\n                    hasPreValue = true;\n                }\n            }\n\n            if (hasPreValue) {\n                Object.defineProperty(this, preValuesProp, {value: preValues, enumerable: false, writable: true});\n            }\n\n            Object.defineProperty(this, callbacksProp, {value: [], enumerable: false, writable: false});\n        }\n\n        get [customElementBirthmark](): true {\n            return true;\n        }\n\n        get renderRoot(): this | ShadowRoot {\n\n            if (options!.renderRoot === \"element\") {\n                return this;\n            }\n\n            return this.shadowRoot ?? this.attachShadow({mode: options!.mode || \"open\", slotAssignment: options!.slotAssignment, delegatesFocus: options!.delegatesFocus});\n        }\n\n        addDisconnectedCallback(callback: CustomElementDisconnectedCallback) {\n            return addCallback(this, CallbackName.disconnected, callback);\n        }\n\n        addPropertyValueChangeCallback(callback: CustomElementPropertyValueChangeCallback) {\n            return addCallback(this, CallbackName.propertyValueChange, callback);\n        }\n    }\n\n    Object.defineProperty(newClass, reactivePropsProp, {value: options.reactive ?? {}});\n    Object.defineProperty(newClass, renderRootProp, {value: options.renderRoot});\n\n    if (options.styles && options.renderRoot !== \"element\") {\n        Object.defineProperty(newClass, stylesProp, {value: Array.isArray(options.styles) ? options.styles : [options.styles]});\n    }\n\n    if (options.globalStyles || (options.renderRoot === \"element\" && options.styles)) {\n        const styles = [options.globalStyles, options.styles].flat().filter(s => !!s);\n        Object.defineProperty(newClass, globalStylesProp, {value: styles});\n    }\n\n    Object.defineProperty(newClass.prototype, \"template\", {value: () => undefined});\n    Object.defineProperty(newClass.prototype, \"connectedCallback\", {value: () => undefined});\n    Object.defineProperty(newClass.prototype, \"disconnectedCallback\", {value: () => undefined});\n\n    return newClass;\n}\n\nfunction addCallback(element: HTMLElement, name: CallbackName, callback: (...args: any[]) => any) {\n    const callbacks = (element as unknown as InternalInstance)[callbacksProp];\n    if (!callbacks.find(c => c[0] === name && c[1] === callback)) {\n        callbacks.push([name, callback]);\n    }\n\n    return () => {\n        const i = callbacks.findIndex(c => c[0] === name && c[1] === callback);\n        if (i > -1) {\n            callbacks.splice(i, 1);\n        }\n    }\n}\n"],"names":["CustomElement","baseTypeOrOptions","options","BaseType","propName","newClass","_b","ownPropNames","p","preValues","hasPreValue","descriptor","reactiveProps","reactivePropsProp","propDefinition","fromAttributeValue","preValuesProp","callbacksProp","_a","customElementBirthmark","callback","addCallback","CallbackName","__publicField","renderRootProp","stylesProp","styles","s","globalStylesProp","element","name","callbacks","c","i"],"mappings":"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"}