{"version":3,"file":"defineComponent.js","sources":["../src/lib/defineComponent.tsx"],"sourcesContent":["import {AssignableType} from \"@co.mmons/js-utils/core\";\nimport type {JSX, ParentProps} from \"solid-js\";\nimport {children, Component, createMemo, mergeProps, sharedConfig, splitProps} from \"solid-js\";\nimport {getNextElement, spread} from \"solid-js/web\";\nimport {CustomElementInterface} from \"./CustomElementInterface\";\nimport {CustomElementJSXAttributes} from \"./CustomElementJSXAttributes\";\nimport {CustomElementJSXEvents} from \"./CustomElementJSXEvents\";\nimport {CustomElementProps} from \"./CustomElementProps\";\nimport {defineCustomElement} from \"./defineCustomElement\";\nimport {childrenProp} from \"./internals/childrenProp\";\nimport {InternalClass} from \"./internals/InternalClass\";\nimport {reactivePropsProp} from \"./internals/reactivePropsProp\";\n\ntype DefineElementFn = () => void;\n\nexport type CustomElementComponent<TagName extends string, ElementType extends CustomElementInterface, ComponentProps = CustomElementProps<ElementType>> = Component<ComponentProps & CustomElementJSXAttributes> & {\n    tagName: TagName;\n    defineCustomElement(): void\n}\n\nexport interface CustomElementComponentOptions<Props = any, Events = any> {\n    props?: Props,\n    events?: Events\n}\n\nexport type ElementComponent<TagName extends string, ComponentElement extends HTMLElement, Props> = Component<Partial<Props> & JSX.HTMLAttributes<ComponentElement>> & {tagName: TagName, register: () => void};\n\nexport interface ElementComponentOptions {\n    define?: DefineElementFn | DefineElementFn[];\n    initialProps?: {[key: string]: any};\n    propsHandler?: (props: {[key: string]: any}) => void;\n}\n\nexport function defineComponent<TagName extends string, ElementType extends CustomElementInterface, Props = CustomElementProps<ElementType>, Events extends {[P in keyof Events]: Event} = any>(tagName: TagName, elementType: AssignableType<ElementType>, options?: CustomElementComponentOptions<Props, Events>): CustomElementComponent<TagName, ElementType, Props & CustomElementJSXEvents<ElementType, Events> & Omit<JSX.HTMLAttributes<ElementType>, keyof CustomElementJSXEvents<ElementType, Events>>>;\n\nexport function defineComponent<TagName extends string, ComponentElement extends HTMLElement, Props>(tagName: TagName, elementType: ComponentElement, options?: ElementComponentOptions): ElementComponent<TagName, ComponentElement, Props>;\n\nexport function defineComponent<TagName extends string, ComponentElement extends HTMLElement, Props>(tagName: TagName, options?: ElementComponentOptions): ElementComponent<TagName, ComponentElement, Props>;\n\nexport function defineComponent(tagName: string, elementTypeOrOptions?: AssignableType | ElementComponentOptions, componentOptions?: ElementComponentOptions | CustomElementComponentOptions): any {\n\n    const solidElementType = typeof elementTypeOrOptions === \"function\" && elementTypeOrOptions as any;\n    const options: Partial<ElementComponentOptions & CustomElementComponentOptions> | undefined = typeof elementTypeOrOptions === \"object\" ? elementTypeOrOptions as ElementComponentOptions : componentOptions;\n\n    function define() {\n\n        if (customElements.get(tagName)) {\n            return;\n\n        } else if (solidElementType) {\n            defineCustomElement(tagName, solidElementType);\n\n        } else if (options?.define) {\n            for (const d of Array.isArray(options.define) ? options.define : [options.define]) {\n                d();\n            }\n        }\n    }\n\n    let cmp: any;\n\n    if (solidElementType) {\n\n        const internalClass: InternalClass = solidElementType as any;\n\n        cmp = (rawProps: ParentProps<any>) => {\n            define();\n\n            const rawChildren = children(() => rawProps.children);\n            const [, uncheckedProps] = splitProps(rawProps, [\"children\"]);\n\n            const props = createMemo(() => {\n                const clone = {};\n                const descriptors = Object.getOwnPropertyDescriptors(uncheckedProps);\n                for (const key of Object.keys(descriptors)) {\n                    const fixed = internalClass[reactivePropsProp][key] ? `prop:${key}` : fixPropName(key);\n                    Object.defineProperty(clone, key !== fixed ? fixed : key, descriptors[key]);\n                }\n                return clone;\n            })\n\n            return createMemo(() => {\n                const el: any = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n                const noShadow = (el as CustomElementInterface).renderRoot === el;\n                const childrenPropName = noShadow ? `prop:${childrenProp}` : \"children\";\n\n                spread(el, mergeProps(props, {[childrenPropName]: rawChildren}), false, false);\n\n                return el;\n            })\n        }\n\n    } else {\n\n        cmp = ((rawProps: any) => {\n\n            define();\n\n            return createMemo(() => {\n\n                const rawChildren = children(() => rawProps.children);\n                const [_, uncheckedProps] = splitProps(rawProps, [\"children\"]);\n\n                const el = sharedConfig.context ? getNextElement() : document.createElement(tagName);\n\n                const props = createMemo(() => {\n                    const clone = {};\n                    const descriptors = Object.getOwnPropertyDescriptors(uncheckedProps);\n                    for (const key of Object.keys(descriptors)) {\n                        const fixed = fixPropName(key);\n                        Object.defineProperty(clone, key !== fixed ? fixed : key, descriptors[key]);\n                    }\n\n                    options?.propsHandler?.(clone);\n\n                    return clone;\n                })\n\n                spread(el, mergeProps(options?.initialProps, props, {children: rawChildren ?? []}), false, true);\n\n                return el;\n            })\n        })\n    }\n\n    cmp[\"tagName\"] = tagName;\n    cmp[\"defineCustomElement\"] = define;\n\n    return cmp;\n}\n\nconst notFixableProps = [\"class\", \"className\", \"classList\", \"ref\", \"style\"];\n\nfunction fixPropName(key: string) {\n\n    if (key.includes(\":\") || key.startsWith(\"on\") || notFixableProps.includes(key)) {\n        return key;\n    } else if (key.includes(\"-\")) {\n        return `attr:${key}`;\n    } else {\n        return `prop:${key}`;\n    }\n}\n"],"names":["defineComponent","tagName","elementTypeOrOptions","componentOptions","solidElementType","options","define","customElements","get","defineCustomElement","d","Array","isArray","cmp","internalClass","rawProps","rawChildren","children","uncheckedProps","splitProps","props","createMemo","clone","descriptors","Object","getOwnPropertyDescriptors","key","keys","fixed","reactivePropsProp","fixPropName","defineProperty","el","sharedConfig","context","getNextElement","document","createElement","childrenPropName","renderRoot","childrenProp","spread","mergeProps","_","propsHandler","initialProps","notFixableProps","includes","startsWith"],"mappings":";;;;;AAuCO,SAASA,EAAgBC,GAAiBC,GAAiEC,GAAiF;AAE/L,QAAMC,IAAmB,OAAOF,KAAyB,cAAcA,GACjEG,IAAwF,OAAOH,KAAyB,WAAWA,IAAkDC;AAE3L,WAASG,IAAS;AAEd,QAAIC,gBAAeC,IAAIP,CAAO;AAGvB,UAAIG;AACPK,QAAAA,EAAoBR,GAASG,CAAgB;AAAA,eAEtCC,KAAAA,QAAAA,EAASC;AAChB,mBAAWI,KAAKC,MAAMC,QAAQP,EAAQC,MAAM,IAAID,EAAQC,SAAS,CAACD,EAAQC,MAAM;AAC5EI,UAAAA;;EAGZ;AAEA,MAAIG;AAEJ,MAAIT,GAAkB;AAElB,UAAMU,IAA+BV;AAErCS,IAAAA,IAAOE,CAAAA,MAA+B;AAClCT,MAAAA;AAEA,YAAMU,IAAcC,EAAS,MAAMF,EAASE,QAAQ,GAC9C,CAAA,EAAGC,CAAc,IAAIC,EAAWJ,GAAU,CAAC,UAAU,CAAC,GAEtDK,IAAQC,EAAW,MAAM;AAC3B,cAAMC,IAAQ,CAAA,GACRC,IAAcC,OAAOC,0BAA0BP,CAAc;AACnE,mBAAWQ,KAAOF,OAAOG,KAAKJ,CAAW,GAAG;AACxC,gBAAMK,IAAQd,EAAce,CAAiB,EAAEH,CAAG,IAAK,QAAOA,MAAQI,EAAYJ,CAAG;AACrFF,iBAAOO,eAAeT,GAAOI,MAAQE,IAAQA,IAAQF,GAAKH,EAAYG,CAAG,CAAC;AAAA,QAC9E;AACA,eAAOJ;AAAAA,MACX,CAAC;AAED,aAAOD,EAAW,MAAM;AACpB,cAAMW,IAAUC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcpC,CAAO,GAElFqC,IADYN,EAA8BO,eAAeP,IAC1B,QAAOQ,MAAiB;AAE7DC,eAAAA,EAAOT,GAAIU,EAAWtB,GAAO;AAAA,UAAC,CAACkB,CAAgB,GAAGtB;AAAAA,QAAW,CAAC,GAAG,IAAO,EAAK,GAEtEgB;AAAAA,MACX,CAAC;AAAA;EAGT;AAEInB,IAAAA,IAAQE,CAAAA,OAEJT,KAEOe,EAAW,MAAM;AAEpB,YAAML,IAAcC,EAAS,MAAMF,EAASE,QAAQ,GAC9C,CAAC0B,GAAGzB,CAAc,IAAIC,EAAWJ,GAAU,CAAC,UAAU,CAAC,GAEvDiB,IAAKC,EAAaC,UAAUC,EAAgB,IAAGC,SAASC,cAAcpC,CAAO,GAE7EmB,IAAQC,EAAW,MAAM;;AAC3B,cAAMC,IAAQ,CAAA,GACRC,IAAcC,OAAOC,0BAA0BP,CAAc;AACnE,mBAAWQ,KAAOF,OAAOG,KAAKJ,CAAW,GAAG;AACxC,gBAAMK,IAAQE,EAAYJ,CAAG;AAC7BF,iBAAOO,eAAeT,GAAOI,MAAQE,IAAQA,IAAQF,GAAKH,EAAYG,CAAG,CAAC;AAAA,QAC9E;AAEArB,gBAAAA,IAAAA,KAAAA,gBAAAA,EAASuC,iBAATvC,QAAAA,EAAAA,KAAAA,GAAwBiB,IAEjBA;AAAAA,MACX,CAAC;AAEDmB,aAAAA,EAAOT,GAAIU,EAAWrC,KAAAA,gBAAAA,EAASwC,cAAczB,GAAO;AAAA,QAACH,UAAUD,KAAe,CAAA;AAAA,MAAE,CAAC,GAAG,IAAO,EAAI,GAExFgB;AAAAA,IACX,CAAC;AAITnB,SAAAA,EAAI,UAAaZ,GACjBY,EAAI,sBAAyBP,GAEtBO;AACX;AAEA,MAAMiC,IAAkB,CAAC,SAAS,aAAa,aAAa,OAAO,OAAO;AAE1E,SAAShB,EAAYJ,GAAa;AAE9B,SAAIA,EAAIqB,SAAS,GAAG,KAAKrB,EAAIsB,WAAW,IAAI,KAAKF,EAAgBC,SAASrB,CAAG,IAClEA,IACAA,EAAIqB,SAAS,GAAG,IACf,QAAOrB,MAEP,QAAOA;AAEvB;"}